From f23e03091ca5b7b639a7bca650942da74c5a7677 Mon Sep 17 00:00:00 2001
From: Baozhu Zuo <zuobaozhu@gmail.com>
Date: Fri, 1 Sep 2017 10:43:47 +0800
Subject: [PATCH] sound: codec: rk3228-codec add Playback Volume controls

---
 sound/soc/codecs/rk3228_codec.c | 43 ++++++++++++++++-------------------------
 1 file changed, 17 insertions(+), 26 deletions(-)

diff --git a/sound/soc/codecs/rk3228_codec.c b/sound/soc/codecs/rk3228_codec.c
index 33df092..472c2d4 100755
--- a/sound/soc/codecs/rk3228_codec.c
+++ b/sound/soc/codecs/rk3228_codec.c
@@ -16,7 +16,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  *
  */
-#define DEBUG 1
+
 #include <linux/module.h>
 #include <linux/device.h>
 #include <linux/delay.h>
@@ -27,8 +27,12 @@
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 #include <linux/regmap.h>
+#include <sound/core.h>
+#include <sound/pcm.h>
 #include <sound/pcm_params.h>
-#include <sound/dmaengine_pcm.h>
+#include <sound/soc.h>
+#include <sound/initval.h>
+#include <sound/tlv.h>
 #include "rk3228_codec.h"
 
 /*
@@ -64,6 +68,14 @@ static const struct reg_default rk3228_codec_reg_defaults[] = {
 	{ HPOUT_POP_CTRL, 0x11 },
 };
 
+
+static const DECLARE_TLV_DB_SCALE(inpga_tlv, -1725, 75, 0);
+
+static const struct snd_kcontrol_new rk3228_snd_controls[] = {
+SOC_DOUBLE_R_TLV("Playback Volume", HPOUTL_GAIN_CTRL, HPOUTR_GAIN_CTRL,
+		 0, HPOUTL_GAIN_MASK, 0, inpga_tlv),
+};
+
 static int rk3228_codec_reset(struct snd_soc_codec *codec)
 {
 	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
@@ -161,7 +173,6 @@ static int rk3228_codec_power_off(struct snd_soc_codec *codec, int wait_ms)
 {
 	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
 
-	printk("rk3228_codec_power_off\n");
 	regmap_update_bits(rk3228->regmap, DAC_PRECHARGE_CTRL,
 			   DAC_CHARGE_XCHARGE_MASK, DAC_CHARGE_DISCHARGE);
 	mdelay(10);
@@ -225,10 +236,6 @@ static int rk3228_codec_open_playback(struct snd_soc_codec *codec)
 	msleep(rk3228->spk_depop_time);
 	rk3228_analog_output(rk3228, 1);
 
-	regmap_update_bits(rk3228->regmap, HPOUTL_GAIN_CTRL,
-			   HPOUTL_GAIN_MASK, OUT_VOLUME);
-	regmap_update_bits(rk3228->regmap, HPOUTR_GAIN_CTRL,
-			   HPOUTR_GAIN_MASK, OUT_VOLUME);
 	return 0;
 }
 
@@ -265,14 +272,8 @@ static int rk3228_codec_close_playback(struct snd_soc_codec *codec)
 {
 	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
 	int i = 0;
-	printk("rk3228_codec_close_playback\n");
 	rk3228_analog_output(rk3228, 0);
 
-	regmap_update_bits(rk3228->regmap, HPOUTL_GAIN_CTRL,
-			   HPOUTL_GAIN_MASK, 0);
-	regmap_update_bits(rk3228->regmap, HPOUTR_GAIN_CTRL,
-			   HPOUTR_GAIN_MASK, 0);
-
 	for (i = 0; i < PLAYBACK_CLOSE_LIST_LEN; i++) {
 		regmap_update_bits(rk3228->regmap,
 				   playback_close_list[i].reg,
@@ -324,9 +325,6 @@ static int rk3228_pcm_startup(struct snd_pcm_substream *substream,
 			      struct snd_soc_dai *dai)
 {
 	struct snd_soc_codec *codec = dai->codec;
-	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
-
-	printk("rk3228->mclk:%ld\n",clk_get_rate(rk3228->mclk));
 
 	return rk3228_codec_open_playback(codec);
 }
@@ -335,7 +333,6 @@ static void rk3228_pcm_shutdown(struct snd_pcm_substream *substream,
 				struct snd_soc_dai *dai)
 {
 	struct snd_soc_codec *codec = dai->codec;
-	printk("rk3228_pcm_shutdown\n");
 	rk3228_codec_close_playback(codec);
 }
 
@@ -370,12 +367,13 @@ static int rk3228_codec_probe(struct snd_soc_codec *codec)
 	rk3228_codec_reset(codec);
 	rk3228_codec_power_on(codec, 0);
 
+	snd_soc_add_codec_controls(codec, rk3228_snd_controls,
+						   ARRAY_SIZE(rk3228_snd_controls));
 	return 0;
 }
 
 static int rk3228_codec_remove(struct snd_soc_codec *codec)
 {
-	printk("rk3228_codec_remove\n");
 	rk3228_codec_close_playback(codec);
 	rk3228_codec_power_off(codec, 0);
 
@@ -534,14 +532,7 @@ static struct platform_driver rk3228_codec_driver = {
 	.probe = rk3228_platform_probe,
 	.remove = rk3228_platform_remove,
 };
-//module_platform_driver(rk3228_codec_driver);
-static int __init rk3228_snd_module_init(void)
-{
-	return platform_driver_register(&rk3228_codec_driver);;
-}
-late_initcall(rk3228_snd_module_init)
-
-
+module_platform_driver(rk3228_codec_driver);
 MODULE_AUTHOR("Sugar Zhang <sugar.zhang@rock-chips.com>");
 MODULE_DESCRIPTION("ASoC rk3228 codec driver");
 MODULE_LICENSE("GPL v2");
-- 
2.7.4

