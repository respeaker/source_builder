From c5671c998ecf14165c37f05ab602627fe39b8c3a Mon Sep 17 00:00:00 2001
From: Baozhu Zuo <zuobaozhu@gmail.com>
Date: Fri, 22 Sep 2017 17:34:29 +0800
Subject: [PATCH 3/5] sound: soc: codec: enable and disable mclk in pcm startup
 and shutdown

---
 sound/soc/codecs/rk3228_codec.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/sound/soc/codecs/rk3228_codec.c b/sound/soc/codecs/rk3228_codec.c
index 472c2d4..bd258d1 100755
--- a/sound/soc/codecs/rk3228_codec.c
+++ b/sound/soc/codecs/rk3228_codec.c
@@ -325,6 +325,13 @@ static int rk3228_pcm_startup(struct snd_pcm_substream *substream,
 			      struct snd_soc_dai *dai)
 {
 	struct snd_soc_codec *codec = dai->codec;
+	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
+	int ret;
+	ret = clk_prepare_enable(rk3228->mclk);
+	if (ret){
+		pr_err("failed to enable acodec mclk\n");
+		return ret;
+	}
 
 	return rk3228_codec_open_playback(codec);
 }
@@ -333,6 +340,8 @@ static void rk3228_pcm_shutdown(struct snd_pcm_substream *substream,
 				struct snd_soc_dai *dai)
 {
 	struct snd_soc_codec *codec = dai->codec;
+	struct rk3228_codec_priv *rk3228 = snd_soc_codec_get_drvdata(codec);
+	clk_disable_unprepare(rk3228->mclk);
 	rk3228_codec_close_playback(codec);
 }
 
@@ -479,13 +488,6 @@ static int rk3228_platform_probe(struct platform_device *pdev)
 		dev_err(&pdev->dev, "can't get acodec mclk\n");
 		return -EPROBE_DEFER;
 	}
-
-	ret = clk_prepare_enable(rk3228->mclk);
-	if (ret){
-		dev_err(&pdev->dev, "failed to enable acodec mclk\n");
-		return ret;
-	}
-	
 #endif
 
 #if 0
-- 
2.7.4

